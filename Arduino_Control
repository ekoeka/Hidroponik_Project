#include <Wire.h>
#include <RTClib.h>
#include <DallasTemperature.h>
#include <OneWire.h>

// Inisialisasi RTC
RTC_DS3231 rtc;

//Penempatan pin
//Arduino Atmega2560
#if defined (AVr)
  // Pin untuk sensor dan relay
  const int relayInPump = 22;
  const int relayMixer = 29;
  const int relayNutrient = 26;
  // Pin ultrasonic
  const int trigPin = 24;
  const int echoPin = 25;
  // Pin Temperatur air
  const int tempSensorPin = 28;
  // Pin Water Level
  const int waterLevelPin = A0;
  // Pin Ph sensor
  const int phSensorPin = A1;
  // Pin Tds
  const int tdsSensorPin = A2;

#elif defined (Uno)
  // Pin untuk sensor dan relay
  const int relayInPump = 2;
  const int relayMixer = 4;
  const int relayNutrient = 5;
  // Pin ultrasonic
  const int trigPin = 6;
  const int echoPin = 7;
  // Pin Temperatur air
  const int tempSensorPin = 8;
  // Pin Water Level
  const int waterLevelPin = A0;
  // Pin Ph sensor
  const int phSensorPin = A1;
  // Pin Tds
  const int tdsSensorPin = A2;
#endif


// Inisialisasi sensor suhu
OneWire oneWire(tempSensorPin);
DallasTemperature sensors(&oneWire);

// Nilai Patokan Awal
/*
        Case

  Tingi tangki Utama 1 Meter ke 100 cm
  Maksimal air 80%
  TDS 400 PPM

*/

// Variabel konfigurasi (NK)
int vk_tinggitangki = 100; // CM
int vk_makstinggiair = 100*80/100; //CM
int vk_mintinggiair = 100*30/100; //CM
int vk_makstds = 400; // PPM

// Variabel Global
// Sensor Ultrsonic
long duration;
int distance, ketinggian;
// Sensor TDS
int tdsValue;

void cek_tinggiair() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = duration * 0.034 / 2;
  ketinggian = vk_tinggitangki - distance;
  Serial.print("Water Level (Ultrasonic): ");
  Serial.print(ketinggian);
  Serial.println(" cm");
}
void cek_tds() {
  tdsValue = analogRead(tdsSensorPin);
  Serial.print("TDS/EC Value: ");
  Serial.println(tdsValue);

}


void setup() {
  Wire.begin();
  rtc.begin();

//sensor temp air
  sensors.begin();
  Serial.begin(9600);

  // Inisialisasi pin relay
  pinMode(relayInPump, OUTPUT);
  pinMode(relayNutrient, OUTPUT);
  pinMode(relayMixer, OUTPUT);

  // Inisialisasi pin sensor
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(waterLevelPin, INPUT);
  pinMode(phSensorPin, INPUT);
  pinMode(tdsSensorPin, INPUT);
}

void loop() {
  /*
        BAGIAN 1 MEMBACA

    Arduino_Control akan membaca data dari semua sensor
  */

  // Membaca waktu dari RTC
  DateTime now = rtc.now();
  Serial.print("Time: ");
  Serial.print(now.hour());
  Serial.print(':');
  Serial.print(now.minute());
  Serial.print(':');
  Serial.print(now.second());
  Serial.println();
  
  // Membaca sensor ultrasonic
  cek_tinggiair();

  // Membaca water level sensor
  int waterLevel = analogRead(waterLevelPin);
  Serial.print("Water Level (Analog): ");
  Serial.println(waterLevel);

  // Membaca sensor pH
  int phValue = analogRead(phSensorPin);
  Serial.print("pH Value: ");
  Serial.println(phValue);

  // Membaca sensor TDS/EC
  cek_tds();

  // Membaca sensor suhu
  sensors.requestTemperatures();
  float temperature = sensors.getTempCByIndex(0);
  Serial.print("Water Temperature: ");
  Serial.print(temperature);
  Serial.println(" Â°C");

  /*
        BAGIAN 2 MENGIRIM dan MENERIMA DATA

    Arduino_Control akan mengirim data ke ESP untuk disimpan sebagai
    log dan di kirim ke web dan Arduino_Display untuk ditunjukkan kelayar
  */

  // Mengirim data ke NodeMCU ESP8266 (alamat 8)
  Wire.beginTransmission(8);
  Wire.write(ketinggian); // Mengirim data level air
  Wire.write(phValue); // Mengirim data pH
  Wire.write(tdsValue); // Mengirim data TDS/EC
  Wire.write((int)temperature); // Mengirim data suhu
  Wire.endTransmission();

  // Mengirim data ke Arduino UNO (alamat 9)
  Wire.beginTransmission(9);
  Wire.write(ketinggian); // Mengirim data level air
  Wire.write(phValue); // Mengirim data pH
  Wire.write(tdsValue); // Mengirim data TDS/EC
  Wire.write((int)temperature); // Mengirim data suhu
  Wire.endTransmission();

  delay(1000); // Update setiap detik
  
  /*
        BAGIAN 3 ACTION

    Arduino_Control akan mengkonfigurasi Tanki utama
  */

// Mengatur Ketinggian air
  if(ketinggian > vk_mintinggiair){
      while(ketinggian < vk_makstinggiair){
      digitalWrite(relayInPump,HIGH);
      delay(5000);
      digitalWrite(relayInPump,LOW);

      digitalWrite(relayMixer,HIGH);
      delay(5000);
      digitalWrite(relayMixer,LOW);

      cek_tds();
  
      if(tdsvalue < vk_makstds){
          
      digitalWrite(relayNutrient,HIGH);
      delay(5000);
      digitalWrite(relayNutrient,LOW);

      digitalWrite(relayMixer,HIGH);
      delay(5000);
      digitalWrite(relayMixer,LOW);

      cek_tinggiair();
      
      }
    }
  }
}
